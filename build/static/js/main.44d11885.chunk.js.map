{"version":3,"sources":["data.js","App.js","serviceWorker.js","index.js"],"names":["data","id","name","price","description","img","likes","PuppyStore","state","filter","handleLike","like","map","el","Object","assign","setState","alphabeticalSort","sort","a","b","localeCompare","likeSort","handleChangeSort","event","console","log","handleChange","target","value","this","className","placeholder","onChange","onClick","React","Component","DisplayItem","items","props","lowercasedFilter","toLowerCase","item","keys","some","key","includes","src","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.44d11885.chunk.js","sourcesContent":["\nconst data=[\n    {id: 1, name:'Teething Rings', price:'$1.99', description:'These chews can help reduce destructive chewing behavior while providing healthy benefits. Great taste of chicken in each and every bite.', img:'./photos/chewToy.png', likes:99},\n    { id: 2, name:'Harnest', price:'$10.99', description:'Soft, stretchy, and resilient. A cushioned, lightweight harness thatâ€™s simple to secure and easy to link up with.', img:'./photos/harnest.png', likes:14},\n    { id: 3, name:'Leash', price:'$15.99', description:'The Flexi New Comfort Medium Retractable Dog Leash measures 16 feet, and comes with an adjustable handle for comfort and convenience.', img:'./photos/leash.png', likes:70},\n    { id: 4, name:'Pee-Pads', price:'$30.99', description:'Super absorbent pads are specially treated to attract your puppy like magic. Pup will be naturally attracted to the pad.', img:'./photos/peepads.png', likes:140},\n    { id: 5, name:'Plush Toy', price:'$17.99', description:'This toy comes in a variety of adorable food-related options including milk and cookies, a popcorn bucket, coffee and donuts. ', img:'./photos/toy.png', likes:14},\n    { id: 6, name:'Chewy Toy', price:'$7.99', description:'Bristles raised during chewing will help clean teeth and prevent tartar build up. Designed for teething puppies.', img:'./photos/chewToy2.png', likes:50}\n]\n\n\nexport default data","import React from 'react';\nimport './App.css';\nimport data from './data'\n\nclass PuppyStore extends React.Component {\n  state={\n    data:[],\n    filter:''\n  }\n\n  componentDidMount(){\n    this.setState({data:data})\n  }\n  handleLike=(id)=>{\n    const like = this.state.data.map(el=>{\n      if(el.id===id){\n        return Object.assign({},el,{\n          likes: el.likes +1\n        } )\n      } else{\n        return el\n      }\n    })\n    this.setState({data:like})\n  }\n  alphabeticalSort=()=>{\n    this.setState(\n      this.state.data.sort((a,b)=>a.name.localeCompare(b.name)))\n    }\n  likeSort=()=>{\n    this.setState(\n      this.state.data.sort((a,b)=>b.likes-a.likes)\n    )\n  }\n  handleChangeSort=(event)=>{\n    console.log(this.handleChange)\n    this.setState({filter: event.target.value})\n  }\n\n  render(){\n    const filter = this.state.filter;\n    \n    return (\n      <div>\n        <h1 className='header'>Puppy Store</h1>\n        <div className='searchComponents'>\n            <input className='search' placeholder='SEARCH' value={filter} onChange={this.handleChangeSort}></input>\n            <button className='searchButton' onClick={this.alphabeticalSort} value ='alpha' >A_Z</button>\n            <button className='searchButton' onClick={this.likeSort}value ='likes' >Popularity</button>\n        </div>      \n        <div className='container'>\n          <DisplayItem  data={this.state.data} handleLike={this.handleLike} filter={this.state.filter}/>\n        </div> \n      </div>\n    )\n  }  \n}\n\nclass DisplayItem extends React.Component{\n\n  render(){\n    let items = this.props.data\n    const filter = this.props.filter;\n    const lowercasedFilter= filter.toLowerCase();\n    const filteredData=items.filter(item=>{\n      return Object.keys(item).some(key=>\n        typeof item[key]=== 'string' && item[key].toLowerCase().includes(lowercasedFilter)\n        )\n    })\n\n    return(\n      filteredData.map(el=>{\n        return(\n          <div className='card' key={el.id}>\n            <div className='name'>\n              <h2>{el.name}</h2>\n              <button className='likeButton' onClick={()=>this.props.handleLike(el.id)}>\n                <p className='totalLikes'>{el.likes}</p>\n              </button>\n            </div>\n            <div className='description'>\n              <h3 className='description-header'>Description:</h3>\n                <br/><br/>\n                  {el.description}\n                  <br/><br/>\n                  <b>{el.price}</b>\n            </div>\n            <div className='image'>\n                <img className='images' src={el.img}></img>\n            </div>\n              <div className='add-to-cart'>\n              <button className='cart-button'>Add To Cart</button>\n            </div>    \n          </div>\n        )\n      })\n    )  \n  }\n}\n\nexport default PuppyStore;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}